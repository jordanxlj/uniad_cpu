NOTE: Redirects are currently not supported in Windows or MacOs.
/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/distributed/launch.py:163: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
  logger.warn(
The module torch.distributed.launch is deprecated and going to be removed in future.Migrate to torch.distributed.run
WARNING:torch.distributed.run:--use_env is deprecated and will be removed in future releases.
 Please read local_rank from `os.environ('LOCAL_RANK')` instead.
INFO:torch.distributed.launcher.api:Starting elastic_operator with launch configs:
  entrypoint       : ./tools/test.py
  min_nodes        : 1
  max_nodes        : 1
  nproc_per_node   : 1
  run_id           : none
  rdzv_backend     : static
  rdzv_endpoint    : 127.0.0.1:28596
  rdzv_configs     : {'rank': 0, 'timeout': 900}
  max_restarts     : 3
  monitor_interval : 5
  log_dir          : None
  metrics_cfg      : {}

INFO:torch.distributed.elastic.agent.server.local_elastic_agent:log directory set to: /var/folders/bl/c09z1sm91mxfb8z7mn7v4rhh0000gq/T/torchelastic_8ffx4to4/none_xcple07i
INFO:torch.distributed.elastic.agent.server.api:[default] starting workers for entrypoint: python
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous'ing worker group
/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/distributed/elastic/utils/store.py:52: FutureWarning: This is an experimental API and will be changed in future.
  warnings.warn(
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous complete for workers. Result:
  restart_count=0
  master_addr=127.0.0.1
  master_port=28596
  group_rank=0
  group_world_size=1
  local_ranks=[0]
  role_ranks=[0]
  global_ranks=[0]
  role_world_sizes=[1]
  global_world_sizes=[1]

INFO:torch.distributed.elastic.agent.server.api:[default] Starting worker group
INFO:torch.distributed.elastic.multiprocessing:Setting worker0 reply file to: /var/folders/bl/c09z1sm91mxfb8z7mn7v4rhh0000gq/T/torchelastic_8ffx4to4/none_xcple07i/attempt_0/0/error.json
projects.mmdet3d_plugin
======
Loading NuScenes tables for version v1.0-trainval...
23 category,
8 attribute,
4 visibility,
64386 instance,
12 sensor,
10200 calibrated_sensor,
2631083 ego_pose,
68 log,
850 scene,
34149 sample,
2631083 sample_data,
1166187 sample_annotation,
4 map,
Done loading in 22.431 seconds.
======
Reverse indexing ...
Done reverse indexing in 6.6 seconds.
======
load checkpoint from local path: ./ckpts/uniad_base_e2e.pth
2023-07-26 15:06:02,575 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.0.conv2 is upgraded to version 2.
2023-07-26 15:06:02,578 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.1.conv2 is upgraded to version 2.
2023-07-26 15:06:02,581 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.2.conv2 is upgraded to version 2.
2023-07-26 15:06:02,583 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.3.conv2 is upgraded to version 2.
2023-07-26 15:06:02,586 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.4.conv2 is upgraded to version 2.
2023-07-26 15:06:02,588 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.5.conv2 is upgraded to version 2.
2023-07-26 15:06:02,591 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.6.conv2 is upgraded to version 2.
2023-07-26 15:06:02,593 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.7.conv2 is upgraded to version 2.
2023-07-26 15:06:02,596 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.8.conv2 is upgraded to version 2.
2023-07-26 15:06:02,599 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.9.conv2 is upgraded to version 2.
2023-07-26 15:06:02,601 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.10.conv2 is upgraded to version 2.
2023-07-26 15:06:02,604 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.11.conv2 is upgraded to version 2.
2023-07-26 15:06:02,607 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.12.conv2 is upgraded to version 2.
2023-07-26 15:06:02,609 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.13.conv2 is upgraded to version 2.
2023-07-26 15:06:02,612 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.14.conv2 is upgraded to version 2.
2023-07-26 15:06:02,614 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.15.conv2 is upgraded to version 2.
2023-07-26 15:06:02,617 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.16.conv2 is upgraded to version 2.
2023-07-26 15:06:02,619 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.17.conv2 is upgraded to version 2.
2023-07-26 15:06:02,622 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.18.conv2 is upgraded to version 2.
2023-07-26 15:06:02,624 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.19.conv2 is upgraded to version 2.
2023-07-26 15:06:02,627 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.20.conv2 is upgraded to version 2.
2023-07-26 15:06:02,629 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.21.conv2 is upgraded to version 2.
2023-07-26 15:06:02,632 - root - INFO - ModulatedDeformConvPack img_backbone.layer3.22.conv2 is upgraded to version 2.
2023-07-26 15:06:02,635 - root - INFO - ModulatedDeformConvPack img_backbone.layer4.0.conv2 is upgraded to version 2.
2023-07-26 15:06:02,639 - root - INFO - ModulatedDeformConvPack img_backbone.layer4.1.conv2 is upgraded to version 2.
2023-07-26 15:06:02,642 - root - INFO - ModulatedDeformConvPack img_backbone.layer4.2.conv2 is upgraded to version 2.
The model and loaded state dict do not match exactly

unexpected key in source state_dict: bbox_size_fc.weight, bbox_size_fc.bias, pts_bbox_head.query_embedding.weight, pts_bbox_head.transformer.reference_points.weight, pts_bbox_head.transformer.reference_points.bias

> /Users/liangming.xu/code/UniAD/tools/test.py(230)main()
-> result = model(return_loss=False, rescale=True, **data)
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/detectors/uniad_track.py(723)simple_test_track()
-> bs = img.size(0)
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/detectors/uniad_track.py(658)_forward_single_frame_inference()
-> bev_embed, bev_pos = self.get_bevs(img, img_metas, prev_bev=prev_bev)
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/core/bbox/coders/detr3d_track_coder.py(57)decode_single()
-> max_num = self.max_num
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/core/bbox/coders/detr3d_track_coder.py(57)decode_single()
-> max_num = self.max_num
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/core/bbox/coders/detr3d_track_coder.py(57)decode_single()
-> max_num = self.max_num
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/detectors/uniad_e2e.py(297)forward_test()
-> result_track[0] = self.upsample_bev_if_tiny(result_track[0])
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/dense_heads/panseg_head.py(1013)forward_test()
-> bbox_list = [dict() for i in range(len(img_metas))]
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/dense_heads/panseg_head.py(227)forward()
-> enc_outputs_class, enc_outputs_coord = self.transformer(
(Pdb) > /Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/dense_heads/seg_head_plugin/seg_deformable_transformer.py(319)forward()
-> memory = self.encoder(query=feat_flatten,
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(351)forward()
-> output = multi_scale_deformable_attn_pytorch(
(Pdb) 346  	            output = MultiScaleDeformableAttnFunction.apply(
347  	                value, spatial_shapes, level_start_index, sampling_locations,
348  	                attention_weights, self.im2col_step)
349  	        else:
350  	            import pdb; pdb.set_trace()
351  ->	            output = multi_scale_deformable_attn_pytorch(
352  	                value, spatial_shapes, sampling_locations, attention_weights)
353  	
354  	        output = self.output_proj(output)
355  	
356  	        if not self.batch_first:
(Pdb) torch.Size([1, 40000, 8, 32])
(Pdb) torch.Size([1, 40000, 8, 4, 4, 2])
(Pdb) torch.Size([1, 40000, 8, 4, 4])
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(352)forward()
-> value, spatial_shapes, sampling_locations, attention_weights)
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(351)forward()
-> output = multi_scale_deformable_attn_pytorch(
(Pdb) --Call--
> /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(94)multi_scale_deformable_attn_pytorch()
-> def multi_scale_deformable_attn_pytorch(value, value_spatial_shapes,
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(116)multi_scale_deformable_attn_pytorch()
-> bs, _, num_heads, embed_dims = value.shape
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(118)multi_scale_deformable_attn_pytorch()
-> sampling_locations.shape
(Pdb) 8
(Pdb) 32
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(117)multi_scale_deformable_attn_pytorch()
-> _, num_queries, num_heads, num_levels, num_points, _ =\
(Pdb) 112  	    Returns:
113  	        Tensor: has shape (bs, num_queries, embed_dims)
114  	    """
115  	
116  	    bs, _, num_heads, embed_dims = value.shape
117  ->	    _, num_queries, num_heads, num_levels, num_points, _ =\
118  	        sampling_locations.shape
119  	    value_list = value.split([H_ * W_ for H_, W_ in value_spatial_shapes],
120  	                             dim=1)
121  	    sampling_grids = 2 * sampling_locations - 1
122  	    sampling_value_list = []
(Pdb) torch.Size([1, 40000, 8, 4, 4, 2])
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(119)multi_scale_deformable_attn_pytorch()
-> value_list = value.split([H_ * W_ for H_, W_ in value_spatial_shapes],
(Pdb) *** NameError: name 'H_' is not defined
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(120)multi_scale_deformable_attn_pytorch()
-> dim=1)
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(119)multi_scale_deformable_attn_pytorch()
-> value_list = value.split([H_ * W_ for H_, W_ in value_spatial_shapes],
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(121)multi_scale_deformable_attn_pytorch()
-> sampling_grids = 2 * sampling_locations - 1
(Pdb) torch.Size([1, 40000, 8, 32])
(Pdb) torch.Size([1, 40000, 8, 32])
(Pdb) 1
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(122)multi_scale_deformable_attn_pytorch()
-> sampling_value_list = []
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(123)multi_scale_deformable_attn_pytorch()
-> for level, (H_, W_) in enumerate(value_spatial_shapes):
(Pdb) tensor([[200, 200]])
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(128)multi_scale_deformable_attn_pytorch()
-> value_l_ = value_list[level].flatten(2).transpose(1, 2).reshape(
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(129)multi_scale_deformable_attn_pytorch()
-> bs * num_heads, embed_dims, H_, W_)
(Pdb) *** NameError: name 'value_l_' is not defined
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(128)multi_scale_deformable_attn_pytorch()
-> value_l_ = value_list[level].flatten(2).transpose(1, 2).reshape(
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(133)multi_scale_deformable_attn_pytorch()
-> sampling_grid_l_ = sampling_grids[:, :, :,
(Pdb) torch.Size([8, 32, 200, 200])
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(134)multi_scale_deformable_attn_pytorch()
-> level].transpose(1, 2).flatten(0, 1)
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(133)multi_scale_deformable_attn_pytorch()
-> sampling_grid_l_ = sampling_grids[:, :, :,
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(134)multi_scale_deformable_attn_pytorch()
-> level].transpose(1, 2).flatten(0, 1)
(Pdb) *** NameError: name 'sampling_grid_l_' is not defined
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(133)multi_scale_deformable_attn_pytorch()
-> sampling_grid_l_ = sampling_grids[:, :, :,
(Pdb) *** NameError: name 'sampling_grid_l_' is not defined
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(134)multi_scale_deformable_attn_pytorch()
-> level].transpose(1, 2).flatten(0, 1)
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(133)multi_scale_deformable_attn_pytorch()
-> sampling_grid_l_ = sampling_grids[:, :, :,
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(136)multi_scale_deformable_attn_pytorch()
-> sampling_value_l_ = F.grid_sample(
(Pdb) torch.Size([8, 40000, 4, 2])
(Pdb) 131  	        # bs, num_heads, num_queries, num_points, 2 ->
132  	        # bs*num_heads, num_queries, num_points, 2
133  	        sampling_grid_l_ = sampling_grids[:, :, :,
134  	                                          level].transpose(1, 2).flatten(0, 1)
135  	        # bs*num_heads, embed_dims, num_queries, num_points
136  ->	        sampling_value_l_ = F.grid_sample(
137  	            value_l_,
138  	            sampling_grid_l_,
139  	            mode='bilinear',
140  	            padding_mode='zeros',
141  	            align_corners=False)
(Pdb) torch.Size([8, 32, 200, 200])
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(137)multi_scale_deformable_attn_pytorch()
-> value_l_,
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(138)multi_scale_deformable_attn_pytorch()
-> sampling_grid_l_,
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(139)multi_scale_deformable_attn_pytorch()
-> mode='bilinear',
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(140)multi_scale_deformable_attn_pytorch()
-> padding_mode='zeros',
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(141)multi_scale_deformable_attn_pytorch()
-> align_corners=False)
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(136)multi_scale_deformable_attn_pytorch()
-> sampling_value_l_ = F.grid_sample(
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(142)multi_scale_deformable_attn_pytorch()
-> sampling_value_list.append(sampling_value_l_)
(Pdb) torch.Size([8, 32, 40000, 4])
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(123)multi_scale_deformable_attn_pytorch()
-> for level, (H_, W_) in enumerate(value_spatial_shapes):
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(146)multi_scale_deformable_attn_pytorch()
-> attention_weights = attention_weights.transpose(1, 2).reshape(
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(147)multi_scale_deformable_attn_pytorch()
-> bs * num_heads, 1, num_queries, num_levels * num_points)
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(146)multi_scale_deformable_attn_pytorch()
-> attention_weights = attention_weights.transpose(1, 2).reshape(
(Pdb) > /opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py(149)multi_scale_deformable_attn_pytorch()
-> output = (torch.stack(sampling_value_list, dim=-2).flatten(-2) *
(Pdb) torch.Size([8, 1, 40000, 16])
(Pdb) 144  	    # (bs, num_heads, num_queries, num_levels, num_points) ->
145  	    # (bs, num_heads, 1, num_queries, num_levels*num_points)
146  	    attention_weights = attention_weights.transpose(1, 2).reshape(
147  	        bs * num_heads, 1, num_queries, num_levels * num_points)
148  	    #import pdb; pdb.set_trace()
149  ->	    output = (torch.stack(sampling_value_list, dim=-2).flatten(-2) *
150  	              attention_weights).sum(-1).view(bs, num_heads * embed_dims,
151  	                                              num_queries)
152  	    return output.transpose(1, 2).contiguous()
153  	
154  	
(Pdb) 4
(Pdb) 
Traceback (most recent call last):
  File "./tools/test.py", line 274, in <module>
    main()
  File "./tools/test.py", line 230, in main
    result = model(return_loss=False, rescale=True, **data)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/detectors/uniad_e2e.py", line 83, in forward
    return self.forward_test(**kwargs)
  File "/Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/detectors/uniad_e2e.py", line 302, in forward_test
    result_seg =  self.seg_head.forward_test(bev_embed, gt_lane_labels, gt_lane_masks, img_metas, rescale)
  File "/Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/dense_heads/panseg_head.py", line 1015, in forward_test
    pred_seg_dict = self(pts_feats)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/runner/fp16_utils.py", line 186, in new_func
    return old_func(*args, **kwargs)
  File "/Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/dense_heads/panseg_head.py", line 227, in forward
    enc_outputs_class, enc_outputs_coord = self.transformer(
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/runner/fp16_utils.py", line 186, in new_func
    return old_func(*args, **kwargs)
  File "/Users/liangming.xu/code/UniAD/projects/mmdet3d_plugin/uniad/dense_heads/seg_head_plugin/seg_deformable_transformer.py", line 319, in forward
    memory = self.encoder(query=feat_flatten,
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmdet/models/utils/transformer.py", line 118, in forward
    x = super(DetrTransformerEncoder, self).forward(*args, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/cnn/bricks/transformer.py", line 585, in forward
    query = layer(
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/cnn/bricks/transformer.py", line 474, in forward
    query = self.attentions[attn_index](
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/utils/misc.py", line 340, in new_func
    output = old_func(*args, **kwargs)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py", line 351, in forward
    output = multi_scale_deformable_attn_pytorch(
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py", line 149, in multi_scale_deformable_attn_pytorch
    output = (torch.stack(sampling_value_list, dim=-2).flatten(-2) *
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/site-packages/mmcv/ops/multi_scale_deform_attn.py", line 149, in multi_scale_deformable_attn_pytorch
    output = (torch.stack(sampling_value_list, dim=-2).flatten(-2) *
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/opt/homebrew/anaconda3/envs/uniad/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
